user www www;

error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    proxy_cache_path  /var/www/cache levels=1:2 keys_zone=my-cache:8m max_size=1000m inactive=600m;
    proxy_temp_path /var/www/cache/tmp;

    tcp_nopush        on;
    tcp_nodelay       off;
  
    gzip            on;
    gzip_http_version 1.1;
    gzip_comp_level 9;
    gzip_proxied any;
    gzip_vary on;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;


    sendfile        on;
    server_tokens off;

    keepalive_timeout  65;

    #Include our Tornado instances
    include /usr/local/nginx/conf/tornados.conf;

    #Include SSL server
    upstream  securetornados {
        server   127.0.0.1:400 max_fails=3  fail_timeout=30s;
    }


    server {
        listen 443 ssl;
        ssl_certificate      /usr/local/nginx/conf/lonava.crt;
        ssl_certificate_key  /usr/local/nginx/conf/lonava.key;  
        access_log  /var/log/nginx/ssl-access.log;
        location /static/usrpics/ {
            alias /usr/local/lonava/static/usrpics/;
            error_page   404  =  /static/usrpics/0.png;
        }


        error_page 500 502 503 504 /500.html;
        location / {
            proxy_pass  http://securetornados;
            }
        location /500.html {
            root /usr/local/lonava/static/;
            }
        location /static/ {
            root /usr/local/lonava;
        }

        }


server {
        listen   80 default;
        server_name  lonava.com;
	    client_max_body_size 4m;

        access_log  /var/log/nginx/access.log;
        error_page 500 502 503 504 /500.html;


        #Don't pass static files to backend
        location /static/ {
            root /usr/local/lonava;
        }
        
        location /static/usrpics/ {
            alias /usr/local/lonava/static/usrpics/;
            error_page   404  =  /static/usrpics/0.png;
        }


        location / {
                proxy_pass  http://tornados;
		        proxy_cache_key "$host$request_uri$cookie_usrid";
                proxy_cache_bypass "$cookie_usrid";
                proxy_cache my-cache;
                proxy_cache_valid  200 302  1m;
                proxy_cache_valid  404      1m;
        }
        location = /500.html {  
                root  /usr/local/lonava/static;  
                    } 


	location /poststory {
        # Pass altered request body to this location
        upload_pass   @poststories;


	upload_max_file_size 3M;


        # Store files to this directory
        # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
        upload_store /usr/local/lonava/static/uploads/ 1;
        
        # Allow uploaded files to be read only by user
        upload_store_access user:r;

        # Set specified fields in request body
        upload_set_form_field $upload_field_name.name "$upload_file_name";
        upload_set_form_field $upload_field_name.content_type "$upload_content_type";
        upload_set_form_field $upload_field_name.path "$upload_tmp_path";

        # Inform backend about hash and size of a file
        upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
        upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

	upload_pass_form_field "submit";
	upload_pass_form_field "_xsrf";
	upload_pass_form_field "chanlist";
	upload_pass_form_field "text";
	upload_pass_form_field "title";
	upload_pass_form_field "url";

        upload_cleanup 400 404 499 500-505;
    }
    	location ^~ /postreply  {
        # Pass altered request body to this location
        upload_pass   @postreplies;


        upload_max_file_size 3M;


        # Store files to this directory
        # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
        upload_store /usr/local/lonava/static/uploads/ 1;

        # Allow uploaded files to be read only by user
        upload_store_access user:r;

        # Set specified fields in request body
        upload_set_form_field $upload_field_name.name "$upload_file_name";
        upload_set_form_field $upload_field_name.content_type "$upload_content_type";
        upload_set_form_field $upload_field_name.path "$upload_tmp_path";

        # Inform backend about hash and size of a file
        upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
        upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

        upload_pass_form_field "submit";
        upload_pass_form_field "_xsrf";
        upload_pass_form_field "storyid";
        upload_pass_form_field "text";
        upload_pass_form_field "parent";

        upload_cleanup 400 404 499 500-505;
    }
      location ^~ /postuser {
        # Pass altered request body to this location
        upload_pass   @postreplies;
        upload_max_file_size 3M;

        # Store files to this directory
        # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
        upload_store /usr/local/lonava/static/uploads/ 1;
        # Allow uploaded files to be read only by user
        upload_store_access user:r;
        # Set specified fields in request body
        upload_set_form_field $upload_field_name.name "$upload_file_name";
        upload_set_form_field $upload_field_name.content_type "$upload_content_type";
        upload_set_form_field $upload_field_name.path "$upload_tmp_path";
        # Inform backend about hash and size of a file
        upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
        upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";
        upload_pass_form_field "submit";
        upload_pass_form_field "_xsrf";
        upload_pass_form_field "text";
        upload_cleanup 400 404 499 500-505;
        }

 # Pass altered request body to a backend
    location @poststories {
        proxy_pass   http://tornados;
    }

 # Pass altered request body to a backend
    location @postreplies {
        proxy_pass   http://tornados;
    }
 # Pass altered request body to a backend
    location @postuser {
        proxy_pass   http://tornados;
    }


}
#REDIRECT EVERYTHING TO Lonava.com, no .net, no .org, no www. 
  server {
  server_name   ~^(www\.)?(?P<domain>.+)$;
  rewrite ^ http://lonava.com$request_uri permanent;
}
}
